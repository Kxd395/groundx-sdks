openapi: 3.0.0
servers:
  - description: GroundX Base URL
    url: https://api.groundx.ai/api
info:
  description: This is an OpenAPI description of the GroundX APIs
  version: "1.0.0"
  title: GroundX API
  contact:
    email: support@groundx.ai
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
paths:
  /inventory:
    get:
      summary: searches inventory
      operationId: searchInventory
      description: |
        By passing in the appropriate options, you can search for
        available inventory in the system
      parameters:
        - in: query
          name: searchString
          description: pass an optional search string for looking up inventory
          required: false
          schema:
            type: string
        - in: query
          name: skip
          description: number of records to skip for pagination
          schema:
            type: integer
            format: int32
            minimum: 0
        - in: query
          name: limit
          description: maximum number of records to return
          schema:
            type: integer
            format: int32
            minimum: 0
            maximum: 50
      responses:
        '200':
          description: search results matching criteria
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/InventoryItem'
        '400':
          description: bad input parameter
    post:
      summary: adds an inventory item
      operationId: addInventory
      description: Adds an item to the system
      responses:
        '201':
          description: item created
        '400':
          description: 'invalid input, object invalid'
        '409':
          description: an existing item already exists
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InventoryItem'
        description: Inventory item to add

  /v1/project/{projectId}:
    get:
      summary: Look up an existing project
      description: This endpoint allows you to retrieve a specific project by projectId.
      operationId: getProjectById
      parameters:
        - in: path
          name: projectId
          required: true
          description: The ID of the project to retrieve.
          schema:
            type: string
      responses:
        '200':
          description: Successful retrieval of project
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectResponse'
    put:
      summary: Update an existing project
      description: This endpoint allows you to update an existing project.
      operationId: updateProject
      parameters:
        - in: path
          name: projectId
          required: true
          description: The ID of the project to update.
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectUpdateRequest'
      responses:
        '200':
          description: Successful update of project
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectResponse'
    delete:
      summary: Delete an existing project
      description: This endpoint allows you to delete your existing projects.
      operationId: deleteProject
      parameters:
        - in: path
          name: projectId
          required: true
          description: The ID of the project to delete.
          schema:
            type: string
      responses:
        '200':
          description: Successful deletion of project
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string

  /v1/project:
    get:
      summary: Look up existing projects
      description: This endpoint allows you to retrieve your existing projects.
      operationId: getProjects
      responses:
        '200':
          description: Successful retrieval of projects
          content:
            application/json:
              schema:
                type: object
                properties:
                  projects:
                    type: array
                    items:
                      $ref: '#/components/schemas/ProjectDetail'
    post:
      summary: Create a project
      description: This endpoint allows you to initialize a new project.
      operationId: createProject
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectCreateRequest'
      responses:
        '200':
          description: Successful creation of project
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectResponse'

components:
  schemas:
    InventoryItem:
      type: object
      required:
        - id
        - name
        - manufacturer
        - releaseDate
      properties:
        id:
          type: string
          format: uuid
          example: d290f1ee-6c54-4b01-90e6-d701748f0851
        name:
          type: string
          example: Widget Adapter
        releaseDate:
          type: string
          format: date-time
          example: '2016-08-29T09:12:33.001Z'
        manufacturer:
          $ref: '#/components/schemas/Manufacturer'
    Manufacturer:
      required:
        - name
      properties:
        name:
          type: string
          example: ACME Corporation
        homePage:
          type: string
          format: url
          example: 'https://www.acme-corp.com'
        phone:
          type: string
          example: 408-867-5309
      type: object
    ProjectDetail:
      type: object
      properties:
        buckets:
          type: array
          items:
            type: object
            description: Refer to the bucket documentation page for the bucket object definition.
        created:
          type: string
          format: date-time
        fileCount:
          type: integer
        fileSize:
          type: string
        projectId:
          type: string
        name:
          type: string
        updated:
          type: string
          format: date-time
    ProjectResponse:
      type: object
      properties:
        project:
          $ref: '#/components/schemas/ProjectDetail'
    ProjectCreateRequest:
      type: object
      properties:
        project:
          type: object
          properties:
            name:
              type: string
    ProjectUpdateRequest:
      type: object
      properties:
        project:
          type: object
          properties:
            name:
              type: string
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: X-API-Key
security:
  - ApiKeyAuth: []
